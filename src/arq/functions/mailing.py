from aiogram import Bot

from keyboards import get_cvs_keyboard
from src.models.models import CVs, User, Vacancies


async def cv_mailing(ctx):
	vacancies = await Vacancies.filter(resume_sub=True).all()

	for vacancy in vacancies:
		filters = {
			'city': vacancy.city,
			'district': vacancy.district,
			'vocation': vacancy.vocation,
			'age_group': vacancy.age_group,
			'min_salary__lt': vacancy.salary
		}

		if vacancy.subvocation:
			filters['subvocation'] = vacancy.subvocation

		cvs = await CVs.filter(**filters).all().prefetch_related("user", "experience")

		if not cvs:
			continue

		for cv in cvs:
			bot: Bot = ctx['bot']

			if vacancy.id in cv.vacancies_ids:
				continue

			rating = cv.experience.rating

			text = f"""{cv.user.full_name}
‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
‚ôü {cv.vocation.value}
üìç –ú—ñ—Å—Ç–æ: {cv.city.value}
üè† –†–∞–π–æ–Ω: {cv.district}
üí∞ –ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∞ –∑/–ø: {cv.min_salary}
üíµ –ë–∞–∂–∞–Ω–∞ –∑/–ø: {cv.desired_salary}
üë®‚Äçü¶≥ –í—ñ–∫: –¥–æ {cv.age_group}
‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
üí° –î–æ—Å–≤—ñ–¥ —Ä–æ–±–æ—Ç–∏: {cv.experience.experience.value}
üíª –ú–∏–Ω—É–ª–µ –º—ñ—Å—Ü–µ —Ä–æ–±–æ—Ç–∏: {cv.experience.name.capitalize() if cv.experience.name else '–ù–µ –≤–∫–∞–∑–∞–Ω–æ'}{f"\nü§© –û—Ü—ñ–Ω–∫–∞: {'‚≠êÔ∏è'* rating}" if rating > 0 else ""}
‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
üìû –¢–µ–ª–µ—Ñ–æ–Ω: {cv.phone_number}"""
			
			if cv.photo_id:
				await bot.send_photo(cv.user.user_id, cv.photo_id, caption=text, reply_markup=await get_cvs_keyboard(cv.user.id, only_comments=True))
			else:
				await bot.send_message(cv.user.user_id, text=text, reply_markup=await get_cvs_keyboard(cv.user.id, only_comments=True))

			cv.vacancies_ids.append(vacancy.id)
			await cv.save()

async def vacancy_mailing(ctx):
	cvs = await CVs.all().prefetch_related("user")
	
	for cv in cvs:
		filters = {
			'city': cv.city,
			'district': cv.district,
			'vocation': cv.vocation,
			'age_group': cv.age_group,
			'salary__gt': cv.min_salary
		}

		if cv.subvocation:
			filters['subvocation'] = cv.subvocation

		vacancies = await Vacancies.filter(**filters).all().prefetch_related("user")

		for vacancy in vacancies:
			bot: Bot = ctx['bot']

			if cv.id in vacancy.cvs_id:
				print(1)
				continue

			vocation = vacancy.vocation

			if (subvocation := vacancy.subvocation) != None and vacancy:
				vocation = subvocation
			else:
				vocation = vocation.value

			communication_text = vacancy.phone_number if vacancy.phone_number else vacancy.telegram_link

			text = f"""–ó–∞–∫–ª–∞–¥ <i>{vacancy.name}</i>
		‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
		üìç –ú—ñ—Å—Ç–æ: {vacancy.city.value}
		üè† –†–∞–π–æ–Ω: {vacancy.district}
		‚ôü {vocation}
		‚è±Ô∏è –ì—Ä–∞—Ñ—ñ–∫ —Ä–æ–±–æ—Ç–∏: {vacancy.work_schedule}
		üí∞ –ó–∞—Ä–æ–±—ñ—Ç–Ω–∞ –ø–ª–∞—Ç–∞: {int(vacancy.salary)} | –°—Ç–∞–≤–∫–∞: {vacancy.rate}
		üìÜ –í–∏–¥–∞—î—Ç—å—Å—è –∑/–ø: {vacancy.issuance_salary}
		üë®‚Äçü¶≥ –í—ñ–∫: –¥–æ {vacancy.age_group}
		üí° –î–æ—Å–≤—ñ–¥ —Ä–æ–±–æ—Ç–∏: {vacancy.experience.value}
		üìû –î–ª—è –∑–≤'—è–∑–∫—É: {communication_text} | {vacancy.user.full_name}
		üì© –°–ø–æ—Å—ñ–± –∑–≤'—è–∑–∫—É: {vacancy.communications.value}"""
			
			if vacancy.photo_id:
				await bot.send_photo(cv.user.user_id, vacancy.photo_id, caption=text)
			else:
				await bot.send_message(cv.user.user_id, text)

			vacancy.cvs_id.append(cv.id)
			await vacancy.save()
			

